{
	"info": {
		"_postman_id": "01971033-deff-402b-a96c-2765dafabb81",
		"name": "Functional Tests",
		"description": "API que expone y permite gestionar recursos asociados al proceso de venta y pago de productos.\nPermite realizar las siguientes funciones:\n\n    - ABM de productos.\n\n    - ABM de clientes.\n\n    - ABM de vendedores.\n\n    - Consulta de transacciones de compra.\n\n    - Aprobaci√≥n de compras.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "vendors",
			"item": [
				{
					"name": "Create a Vendor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9f1927d-4ed8-43cc-831a-20b2e614ca79",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.collectionVariables.set('vendorId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Stan\");",
									"    pm.expect(jsonData.middleName).to.eql(\"S.\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Stanman\");",
									"    pm.expect(jsonData.username).to.eql(\"thebest\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Stan\",\n    \"middleName\": \"S.\",\n    \"lastName\": \"Stanman\",\n    \"username\": \"thebest\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors"
							]
						},
						"description": "Creates a new instance of a `Vendor`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70,\n    \"firstName\": \"Stan\",\n    \"middleName\": \"S.\",\n    \"lastName\": \"Stanman\",\n    \"username\": \"thebest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vendors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create another Vendor ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d376785e-03ed-44bd-92a1-a609cb02a60c",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.collectionVariables.set('vendorId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"James\");",
									"    pm.expect(jsonData.middleName).to.eql(\"Jimmy\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Mc. Gill\");",
									"    pm.expect(jsonData.username).to.eql(\"saulgoodman\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"James\",\n    \"middleName\": \"Jimmy\",\n    \"lastName\": \"Mc. Gill\",\n    \"username\": \"saulgoodman\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors"
							]
						},
						"description": "Creates a new instance of a `Vendor`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70,\n    \"firstName\": \"Stan\",\n    \"middleName\": \"S.\",\n    \"lastName\": \"Stanman\",\n    \"username\": \"thebest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vendors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List All vendors",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37211036-133c-4107-8dda-bb15800e17ae",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac3c3ddf-f950-41f5-a7c9-d3ae6b5b3305",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vendors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors"
							]
						},
						"description": "Gets a list of all `Vendor` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Vendor` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vendors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 70,\n  \"firstName\": \"Stan\",\n  \"middleName\": \"S.\",\n  \"lastName\": \"Stanman\",\n  \"username\": \"thebest\"\n },\n {\n  \"id\": 70,\n  \"firstName\": \"Stan\",\n  \"middleName\": \"S.\",\n  \"lastName\": \"Stanman\",\n  \"username\": \"thebest\"\n }\n]"
						}
					]
				},
				{
					"name": "Get created Vendor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1d839d1-9012-42a5-a7f3-1370749b4d5e",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"James\");",
									"    pm.expect(jsonData.middleName).to.eql(\"Jimmy\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Mc. Gill\");",
									"    pm.expect(jsonData.username).to.eql(\"saulgoodman\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vendors/:vendorId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors",
								":vendorId"
							],
							"variable": [
								{
									"key": "vendorId",
									"value": "{{vendorId}}",
									"type": "string"
								}
							]
						},
						"description": "Gets the details of a single instance of a `Vendor`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Vendor`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vendors/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 70,\n \"firstName\": \"Stan\",\n \"middleName\": \"S.\",\n \"lastName\": \"Stanman\",\n \"username\": \"thebest\"\n}"
						}
					]
				},
				{
					"name": "Update created Vendor",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51ead23d-9c20-4f6a-8acd-9fac731adc50",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Saul\");",
									"    pm.expect(jsonData.middleName).to.eql(\"\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Goodman\");",
									"    pm.expect(jsonData.username).to.eql(\"jimmymcgill\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Saul\",\n    \"middleName\": \"\",\n    \"lastName\": \"Goodman\",\n    \"username\": \"jimmymcgill\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendors/:vendorId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors",
								":vendorId"
							],
							"variable": [
								{
									"key": "vendorId",
									"value": "{{vendorId}}",
									"type": "string"
								}
							]
						},
						"description": "Updates an existing `Vendor`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70,\n    \"firstName\": \"Stan\",\n    \"middleName\": \"S.\",\n    \"lastName\": \"Stanman\",\n    \"username\": \"thebest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vendors/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 70,\n \"firstName\": \"Stan\",\n \"middleName\": \"S.\",\n \"lastName\": \"Stanman\",\n \"username\": \"thebest\"\n}"
						}
					]
				},
				{
					"name": "Get same Vendor by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f8cc329-c09d-480f-a491-32beeaa950d4",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Saul\");",
									"    pm.expect(jsonData.middleName).to.eql(\"\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Goodman\");",
									"    pm.expect(jsonData.username).to.eql(\"jimmymcgill\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vendors/:vendorId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors",
								":vendorId"
							],
							"variable": [
								{
									"key": "vendorId",
									"value": "{{vendorId}}",
									"type": "string"
								}
							]
						},
						"description": "Gets the vendor after updating some params"
					},
					"response": [
						{
							"name": "Successful response - returns a single `Vendor`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vendors/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 70,\n \"firstName\": \"Stan\",\n \"middleName\": \"S.\",\n \"lastName\": \"Stanman\",\n \"username\": \"thebest\"\n}"
						}
					]
				},
				{
					"name": "Update only one field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5bab5f4-568e-42a6-baa8-f6afb1c7cbe4",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.collectionVariables.set('vendorId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Saul\");",
									"    pm.expect(jsonData.middleName).to.eql(\"It's all good, man\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Goodman\");",
									"    pm.expect(jsonData.username).to.eql(\"jimmymcgill\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"middleName\": \"It's all good, man\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/vendors/:vendorId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors",
								":vendorId"
							],
							"variable": [
								{
									"key": "vendorId",
									"type": "string",
									"value": "{{vendorId}}"
								}
							]
						},
						"description": "Updates an existing `Vendor`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 70,\n    \"firstName\": \"Stan\",\n    \"middleName\": \"S.\",\n    \"lastName\": \"Stanman\",\n    \"username\": \"thebest\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/vendors/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 70,\n \"firstName\": \"Stan\",\n \"middleName\": \"S.\",\n \"lastName\": \"Stanman\",\n \"username\": \"thebest\"\n}"
						}
					]
				},
				{
					"name": "Delete a Vendor",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/vendors/:vendorId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vendors",
								":vendorId"
							],
							"variable": [
								{
									"key": "vendorId",
									"value": "{{vendorId}}",
									"type": "string"
								}
							]
						},
						"description": "Deletes an existing `Vendor`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/vendors/:vendorId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vendors",
										":vendorId"
									],
									"variable": [
										{
											"key": "vendorId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ejercita el ABMC de Vendors a trav√©s de la API.\n\n- Se crea un Vendor\n- Se crea otro Vendor\n- Se listan\n- Se obtiene el √∫ltimo de ellos por Id\n- Se lo modifica\n- Se lo elimina\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5dbe807d-3bc3-469c-bca8-ebd35b08b083",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "88b49c1b-49a7-44a1-9c9e-db3bb829b62b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response must be OK\", function () {",
							"     pm.response.to.be.ok;",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "customers",
			"item": [
				{
					"name": "Create a Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cc8aa1f-1513-41dc-835e-327e403ad3f7",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Customer:\",  jsonData);",
									"",
									"pm.collectionVariables.set('customerId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Bartolomeo\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Simpson\");",
									"    pm.expect(jsonData.salutation).to.eql(\"Mr.\");",
									"    pm.expect(jsonData.cuit).to.eql(\"20191919197\");",
									"    pm.expect(jsonData.address_l1).to.eql(\"Fake Street 123\");",
									"    pm.expect(jsonData.address_l2).to.eql(\"Springfield\");",
									"    pm.expect(jsonData.address_l3).to.eql(\"Chafachussetts\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Bartolomeo\",\n    \"lastName\": \"Simpson\",\n    \"salutation\": \"Mr.\",\n    \"cuit\": \"20191919197\",\n    \"address_l1\": \"Fake Street 123\",\n    \"address_l2\": \"Springfield\",\n    \"address_l3\": \"Chafachussetts\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Creates a new instance of a `Customer`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 12,\n    \"firstName\": \"Bartolomeo\",\n    \"middleName\": \"J.\",\n    \"lastName\": \"Simpson\",\n    \"salutation\": \"Mr.\",\n    \"cuit\": \"20191919197\",\n    \"address_l1\": \"Fake Street 123\",\n    \"address_l2\": \"Springfield\",\n    \"address_l3\": \"Chafachussetts\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List All customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1449092-8465-428e-8ee6-f2a27f6e8dd2",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Gets a list of all `Customer` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Customer` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 63,\n  \"firstName\": \"some text\",\n  \"middletName\": \"some text\",\n  \"lastName\": \"some text\",\n  \"salutation\": \"some text\",\n  \"cuit\": \"some text\",\n  \"address_l1\": \"some text\",\n  \"address_l2\": \"some text\",\n  \"address_l3\": \"some text\"\n },\n {\n  \"id\": 55,\n  \"firstName\": \"some text\",\n  \"middletName\": \"some text\",\n  \"lastName\": \"some text\",\n  \"salutation\": \"some text\",\n  \"cuit\": \"some text\",\n  \"address_l1\": \"some text\",\n  \"address_l2\": \"some text\",\n  \"address_l3\": \"some text\"\n }\n]"
						}
					]
				},
				{
					"name": "Get a Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "85468240-08f8-43e1-a7ca-2f7a0748e21d",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Customer:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Bartolomeo\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Simpson\");",
									"    pm.expect(jsonData.salutation).to.eql(\"Mr.\");",
									"    pm.expect(jsonData.cuit).to.eql(\"20191919197\");",
									"    pm.expect(jsonData.address_l1).to.eql(\"Fake Street 123\");",
									"    pm.expect(jsonData.address_l2).to.eql(\"Springfield\");",
									"    pm.expect(jsonData.address_l3).to.eql(\"Chafachussetts\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"type": "string"
								}
							]
						},
						"description": "Gets the details of a single instance of a `Customer`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Customer`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 46,\n \"firstName\": \"some text\",\n \"middletName\": \"some text\",\n \"lastName\": \"some text\",\n \"salutation\": \"some text\",\n \"cuit\": \"some text\",\n \"address_l1\": \"some text\",\n \"address_l2\": \"some text\",\n \"address_l3\": \"some text\"\n}"
						}
					]
				},
				{
					"name": "Update a Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cfae46d-d1f7-41e5-8a5b-6b052b5d6982",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Vendor:\",  jsonData);",
									"",
									"pm.collectionVariables.set('vendorId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.firstName).to.eql(\"Bartolomeo\");",
									"    pm.expect(jsonData.lastName).to.eql(\"Simpson\");",
									"    pm.expect(jsonData.salutation).to.eql(\"Mr.\");",
									"    pm.expect(jsonData.cuit).to.eql(\"20191919197\");",
									"    pm.expect(jsonData.address_l1).to.eql(\"Avenida Siempreviva 723\");",
									"    pm.expect(jsonData.address_l2).to.eql(\"Springfield\");",
									"    pm.expect(jsonData.address_l3).to.eql(\"Chafachussetts\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Bartolomeo\",\n    \"middleName\": \"J.\",\n    \"lastName\": \"Simpson\",\n    \"salutation\": \"Mr.\",\n    \"cuit\": \"20191919197\",\n    \"address_l1\": \"Avenida Siempreviva 723\",\n    \"address_l2\": \"Springfield\",\n    \"address_l3\": \"Chafachussetts\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"type": "string"
								}
							]
						},
						"description": "Updates an existing `Customer`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 12,\n    \"firstName\": \"Bartolomeo\",\n    \"middleName\": \"J.\",\n    \"lastName\": \"Simpson\",\n    \"salutation\": \"Mr.\",\n    \"cuit\": \"20191919197\",\n    \"address_l1\": \"Fake Street 123\",\n    \"address_l2\": \"Springfield\",\n    \"address_l3\": \"Chafachussetts\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a Customer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/customers/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"customers",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "{{customerId}}",
									"type": "string"
								}
							]
						},
						"description": "Deletes an existing `Customer`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ejercita la API sobre el recurso Customer\n\n- Se crea uno\n- Se listan todos\n- Se obtiene el √∫ltimo de ellos por Id\n- Se lo modifica\n- Se lo elimina\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "598aa0bf-cc6e-4f50-8a09-abddf8f831ee",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2e659440-ce95-4fd3-ae94-7c09ff7075ac",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response must be OK\", function () {",
							"     pm.response.to.be.ok;",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "products",
			"item": [
				{
					"name": "Create a Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512bb560-704b-4d91-9200-035306ddb1e8",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Product:\",  jsonData);",
									"",
									"pm.collectionVariables.set('productId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"Tel√©fono a disco\");",
									"    pm.expect(jsonData.color).to.eql(\"Verde agua\");",
									"    pm.expect(jsonData.thumbnail).to.eql(\"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Tel√©fono a disco\",\n    \"color\": \"Verde agua\",\n    \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Creates a new instance of a `Product`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 12223,\n    \"name\": \"Tel√©fono a disco\",\n    \"color\": \"Verde agua\",\n    \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List All products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Gets a list of all `Product` entities."
					},
					"response": [
						{
							"name": "Successful response - returns an array of `Product` entities.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 12223,\n  \"name\": \"Tel√©fono a disco\",\n  \"color\": \"Verde agua\",\n  \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n },\n {\n  \"id\": 12223,\n  \"name\": \"Tel√©fono a disco\",\n  \"color\": \"Verde agua\",\n  \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n }\n]"
						}
					]
				},
				{
					"name": "Get a Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e76053c-f94a-4448-9205-ef0c8c11b935",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Product:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"Tel√©fono a disco\");",
									"    pm.expect(jsonData.color).to.eql(\"Verde agua\");",
									"    pm.expect(jsonData.thumbnail).to.eql(\"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{productId}}",
									"type": "string",
									"description": {
										"content": "(Required) A unique identifier for a `Product`.",
										"type": "text/plain"
									}
								}
							]
						},
						"description": "Gets the details of a single instance of a `Product`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `Product`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 12223,\n \"name\": \"Tel√©fono a disco\",\n \"color\": \"Verde agua\",\n \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n}"
						}
					]
				},
				{
					"name": "Update a Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dda22fd9-127e-43c0-848b-65e9fa0a99fd",
								"exec": [
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"Product:\",  jsonData);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.name).to.eql(\"Tel√©fono a disco\");",
									"    pm.expect(jsonData.color).to.eql(\"Negro azabache\");",
									"    pm.expect(jsonData.thumbnail).to.eql(\"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"color\": \"Negro azabache\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{productId}}",
									"type": "string",
									"description": {
										"content": "(Required) A unique identifier for a `Product`.",
										"type": "text/plain"
									}
								}
							]
						},
						"description": "Updates an existing `Product`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 12223,\n    \"name\": \"Tel√©fono a disco\",\n    \"color\": \"Verde agua\",\n    \"thumbnail\": \"https://via.placeholder.com/468x60?text=Tel%C3%A9fono+a+Disco\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 57,\n \"name\": \"bolsa\",\n \"color\": \"verde\",\n \"thumbnail\": \"https://..\"\n}"
						}
					]
				},
				{
					"name": "Delete a Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"key": "productId",
									"value": "{{productId}}",
									"type": "string",
									"description": {
										"content": "(Required) A unique identifier for a `Product`.",
										"type": "text/plain"
									}
								}
							]
						},
						"description": "Deletes an existing `Product`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/:productId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":productId"
									],
									"variable": [
										{
											"key": "productId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ejercita la API sobre el recurso Product\n\n- Se crea uno\n- Se listan todos\n- Se obtiene el √∫ltimo de ellos por Id\n- Se lo modifica\n- Se lo elimina\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c007580-f0ef-4bc4-bd7f-4a5bc135c72f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f7afb844-569e-4b2d-9059-5eecee94dd8c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response must be OK\", function () {",
							"     pm.response.to.be.ok;",
							"});"
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "purchase Transactions",
			"item": [
				{
					"name": "Create a PurchaseTransaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8accced7-5397-46f3-8c96-0cf30c33ec43",
								"exec": [
									"",
									"pm.test(\"Response body must be present\", function () {",
									"    pm.request.to.have.body;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"console.log(\"Id:\",      jsonData.id);",
									"console.log(\"PurchaseTransaction:\",  jsonData);",
									"",
									"pm.collectionVariables.set('purchaseTransactionId', jsonData.id);",
									"",
									"pm.test(\"Response data is the same we sent\", function () {",
									"    pm.expect(jsonData.status).to.eql(\"PENDING\");",
									"    pm.expect(jsonData.purchaseOrderId).to.eql(\"12345678990\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"PENDING\",\n    \"purchaseOrderId\": \"12345678990\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchaseTransactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchaseTransactions"
							]
						},
						"description": "Creates a new instance of a `PurchaseTransaction`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"PENDING\",\n    \"purchaseOrderId\": \"nisi veniam\",\n    \"id\": -28600999,\n    \"approverId\": \"tempor velit\",\n    \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n    \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n    \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/purchaseTransactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchaseTransactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"PENDING\",\n \"purchaseOrderId\": \"magna enim irure eiusmod\",\n \"id\": 3148168,\n \"approverId\": \"et laborum occaecat commodo\",\n \"approvalDateTime\": \"2018-05-02T07:59:06.502Z\",\n \"rejectionDateTime\": \"1951-11-25T23:50:31.257Z\",\n \"createDateTime\": \"1943-09-04T07:30:16.982Z\"\n}"
						}
					]
				},
				{
					"name": "Create a PurchaseTransaction. Expecting BAD REQUEST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "439d1fa3-5bc9-471e-aa7d-f3a6c583dcb5",
								"exec": [
									"",
									"pm.test(\"Response must be badRequest\", function () {",
									"    pm.response.to.be.badRequest;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"console.log(\"PurchaseTransaction:\",  jsonData);",
									"",
									"pm.test(\"Response must have a message\", function () {",
									"    pm.expect(jsonData.message).to.be.not.null;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"PENDING\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchaseTransactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchaseTransactions"
							]
						},
						"description": "Shpuld not create a new instance of `PurchaseTransaction` if purchaseId is not provided.\n"
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"PENDING\",\n    \"purchaseOrderId\": \"nisi veniam\",\n    \"id\": -28600999,\n    \"approverId\": \"tempor velit\",\n    \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n    \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n    \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/purchaseTransactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchaseTransactions"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"PENDING\",\n \"purchaseOrderId\": \"magna enim irure eiusmod\",\n \"id\": 3148168,\n \"approverId\": \"et laborum occaecat commodo\",\n \"approvalDateTime\": \"2018-05-02T07:59:06.502Z\",\n \"rejectionDateTime\": \"1951-11-25T23:50:31.257Z\",\n \"createDateTime\": \"1943-09-04T07:30:16.982Z\"\n}"
						}
					]
				},
				{
					"name": "Get a PurchaseTransaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchaseTransactions",
								":purchaseTransactionId"
							],
							"variable": [
								{
									"key": "purchaseTransactionId",
									"value": "{{purchaseTransactionId}}",
									"type": "string"
								}
							]
						},
						"description": "Gets the details of a single instance of a `PurchaseTransaction`."
					},
					"response": [
						{
							"name": "Successful response - returns a single `PurchaseTransaction`.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchaseTransactions",
										":purchaseTransactionId"
									],
									"variable": [
										{
											"key": "purchaseTransactionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"PENDING\",\n \"purchaseOrderId\": \"nisi veniam\",\n \"id\": -28600999,\n \"approverId\": \"tempor velit\",\n \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}"
						}
					]
				},
				{
					"name": "Update a PurchaseTransaction",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"PENDING\",\n    \"purchaseOrderId\": \"nisi veniam\",\n    \"id\": -28600999,\n    \"approverId\": \"tempor velit\",\n    \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n    \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n    \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchaseTransactions",
								":purchaseTransactionId"
							],
							"variable": [
								{
									"key": "purchaseTransactionId",
									"value": "32644297",
									"type": "string",
									"description": {
										"content": "(Required) A unique identifier for a `PurchaseTransaction`.",
										"type": "text/plain"
									}
								}
							]
						},
						"description": "Updates an existing `PurchaseTransaction`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"PENDING\",\n    \"purchaseOrderId\": \"nisi veniam\",\n    \"id\": -28600999,\n    \"approverId\": \"tempor velit\",\n    \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n    \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n    \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchaseTransactions",
										":purchaseTransactionId"
									],
									"variable": [
										{
											"key": "purchaseTransactionId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"PENDING\",\n \"purchaseOrderId\": \"nisi veniam\",\n \"id\": -28600999,\n \"approverId\": \"tempor velit\",\n \"approvalDateTime\": \"1999-07-21T13:44:39.870Z\",\n \"rejectionDateTime\": \"1977-01-05T20:58:01.954Z\",\n \"createDateTime\": \"1980-03-20T06:59:07.116Z\"\n}"
						}
					]
				},
				{
					"name": "Delete a PurchaseTransaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"purchaseTransactions",
								":purchaseTransactionId"
							],
							"variable": [
								{
									"key": "purchaseTransactionId",
									"value": "32644297",
									"type": "string",
									"description": {
										"content": "(Required) A unique identifier for a `PurchaseTransaction`.",
										"type": "text/plain"
									}
								}
							]
						},
						"description": "Deletes an existing `PurchaseTransaction`."
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/purchaseTransactions/:purchaseTransactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"purchaseTransactions",
										":purchaseTransactionId"
									],
									"variable": [
										{
											"key": "purchaseTransactionId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Ejercita la API sobre el recurso PurchaseTransaction\n\n- Se crea una en estado PENDING\n- Se intenta crear una con par√°metros inv√°lidos\n- Se obtiene la transacci√≥n creada por Id\n- Se la modifica, rechazando la transacci√≥n\n- Se la elimina\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d4be9ddb-51c4-422b-a045-63ede1a478fc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a6cbca03-7f54-445d-8b92-1bdba1ad1dc4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "047db18a-4055-441f-b888-35fea9aea3c6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8be8ef45-2b46-464c-9af9-f95848fac7f4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cc3150f5-3fb7-40cd-9495-69cada546f81",
			"key": "baseUrl",
			"value": "{{vendorId}}"
		},
		{
			"id": "a3444542-dff0-4c82-b055-a4ec1716aae6",
			"key": "vendorId",
			"value": 110
		},
		{
			"id": "5d34aafa-1460-4a6e-a373-10380621f12c",
			"key": "productId",
			"value": 87
		},
		{
			"id": "3ad7a90f-225e-4a9a-a9cf-50e2213215fd",
			"key": "customerId",
			"value": 110
		},
		{
			"id": "d0c287f7-48d7-4064-abec-ec8de349060e",
			"key": "purchaseTransactionId",
			"value": 88
		}
	],
	"protocolProfileBehavior": {}
}